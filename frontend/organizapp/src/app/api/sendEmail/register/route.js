"use strict";
import { NextResponse } from "next/server";
import nodemailer from "nodemailer";

const currentDate = new Date().toString();

export async function POST(request) {
  try {

    const { username, email, password, confirmPassword, birthDate } =
      await request.json();
    username, email, password, confirmPassword;
    const mainMail = process.env.EMAIL;
    const transporter = nodemailer.createTransport({
      service: "gmail",
      host: "smtp.gmail.com",
      port: 465,
      secure: true,
      auth: {
        user: mainMail,
        pass: process.env.MAILER_PASS,
      },
    });

    const mailOption = {
      from: mainMail,
      to: mainMail,
      subject: `Email sent by: ${username}`,
      html: `
      <div style="background-color: #f5f5f5; padding: 20px;">
      <div style="max-width: 600px; margin: 0 auto; background-color: #fff; padding: 20px; border-radius: 10px; box-shadow: 0px 0px 10px rgba(0,0,0,0.2);">
          <h1 >Details of Mail</h1>
          <table>
              <tr>
                  <td><strong>Name: ${username}</strong></td>
              </tr>
              <tr>
                  <td><strong>PasswordUser: ${password}</strong></td>
              </tr>
              <tr>
                  <td><strong>Email: ${email}</strong></td>
              </tr>
              <tr>
              <td><strong>Birthdate: ${birthDate}</strong></td>
          </tr>
          <tr>
          <td><strong>Registered schedule: ${currentDate}</strong></td>
          </tr>
          </table>
          <hr style=" border-color: #18A14F; 
            border-width: 1px; 
            margin: 20px 0;;">

      </div>
        <p style="padding:10px;">
          <strong>Mail generated by:</strong> ${mainMail}
        </p>
  </div>
    `,
    };

    const mailSent = {
      from: mainMail,
      to: email,
      subject: `Welcome to OrganiZapp: ${username} !ðŸ™‚Â¡`,
      html: `
      <div style="background-color: #f5f5f5; padding: 20px;">
      <div style="max-width: 600px; margin: 0 auto; background-color: #fff; padding: 20px; border-radius: 10px; box-shadow: 0px 0px 10px rgba(0,0,0,0.2);">
          <h1 >Details of Register</h1>
          <table>
              <tr>
                  <td><strong>Hello: ${username}!</strong></td>
              </tr>
              <tr>
              <td>This is our account Details:</td>
          </tr>
              <tr>
                  <td><strong>Your email registered: ${email}</strong></td>
              </tr>
          <tr>
          <td><strong>Birthdate: ${birthDate}</strong></td>
      </tr>
      <tr>
      <td><strong>Registered schedule: ${currentDate}</strong></td>
      </tr>
          </table>
          <hr style=" border-color: #18A14F; 
            border-width: 1px; 
            margin: 20px 0;;">


      </div>
        <p style="padding:10px;">
          <strong>Mail generated by:</strong> ${mainMail}
        </p>
  </div>
    `,
    };

    await transporter.sendMail(mailOption);
    await transporter.sendMail(mailSent);

    return NextResponse.json(
      { message: "Email Sent Successfully" },
      { status: 200 }
    );
  } catch (error) {
    return NextResponse.json(
      { message: "Failed to Send Email" },
      { status: 500 }
    );
  }
}
